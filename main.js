!function(){"use strict";class e{constructor(e,t,s,r,i,n){this._name=e.name,this._link=e.link,this._id=e._id,this._ownerId=e.owner._id,this._likes=e.likes,this._userId=t,this._cardSelector=s,this._handleCardClick=r,this._handleDeleteClick=i,this._handleLikeClick=n}deleteCard(){this._cardElement.remove(),this._cardElement=null}_addLikes(){this._likeBtn.classList.add("card__like-button_active")}_removeLikes(){this._likeBtn.classList.remove("card__like-button_active")}setLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){return this._cardLike.textContent=this._likes.length,this.isLiked()?this._addLikes():this._removeLikes()}_setEventListeners(){this._likeBtn=this._cardElement.querySelector(".card__like-button"),this._deleteBtn=this._cardElement.querySelector(".card__delete-button"),this._likeBtn.addEventListener("click",(()=>{this._handleLikeClick(this._id)})),this._deleteBtn.addEventListener("click",(()=>{this._handleDeleteClick(this._id)})),this._cardImgElement.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCardElement(){return this._cardElement=this._getElement(),this._cardImgElement=this._cardElement.querySelector(".card__image"),this._titleElement=this._cardElement.querySelector(".card__title"),this._cardLike=this._cardElement.querySelector(".card__like-number"),this._setEventListeners(),this._renderLikes(),this._userId!=this._ownerId&&this._deleteBtn.remove(),this._cardImgElement.src=this._link,this._cardImgElement.alt=this._name,this._titleElement.textContent=this._name,this._cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitBtnSelector=e.submitButtonSelector,this._inactiveBtnClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formELement=t}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.validity.valid}_setFormEventListeners(){this._inputElements=[...this._formELement.querySelectorAll(this._inputSelector)],this._submitBtn=this._formELement.querySelector(this._submitBtnSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}_disableButton(){this._submitBtn.classList.add(this._inactiveBtnClass),this._submitBtn.disabled=!0}_enableButton(){this._submitBtn.classList.remove(this._inactiveBtnClass),this._submitBtn.disabled=!1}toggleButtonState(){this._inputElements.some(this._hasInvalidInput)?this._enableButton():this._disableButton()}_showInputError(e){const t=this._formELement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formELement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}enableValidation(){this._formElements=[...document.querySelectorAll(this._formSelector)],this._formElements.forEach((e=>{e.addEventListener("submit",(e=>{e.preventDefault()})),this._setFormEventListeners()}))}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error_visible"},r=document.querySelector("#profile-edit-modal"),i=r.querySelector(".modal__form"),n=document.querySelector("#card-add-modal"),o=n.querySelector(".modal__form"),a=(document.querySelector(".cards__list"),document.querySelector("#image-modal")),l=document.querySelector("#delete-modal"),d=document.querySelector("#avatar-modal"),c=d.querySelector("#avatar-modal-form"),h=document.querySelector(".profile__edit"),_=r.querySelector(".modal__close"),m=document.querySelector(".profile__add"),u=n.querySelector(".modal__close"),E=document.querySelector(".profile__title"),S=document.querySelector(".profile__description"),v=document.querySelector(".profile__image"),p=a.querySelector(".modal__close"),k=l.querySelector(".modal__close"),L=document.querySelector(".profile__avatar-edit-btn"),b=d.querySelector(".modal__close"),f=document.querySelector("#title-input"),y=document.querySelector("#description-input");document.querySelector("#card-title-input"),document.querySelector("#url-input");var C=class{constructor(e){let{modalSelector:t}=e;this._modalElement=t}open(){this._modalElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{27===e.which&&this.close()};_handleOverlayClose(e){e.target.classList.contains("modal__opened")&&this.close()}setEventListeners(){this._modalElement.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this._modalElement.addEventListener("mousedown",(e=>this._handleOverlayClose(e)))}},I=class extends C{constructor(e,t){super({modalSelector:e}),this._modalForm=this._modalElement.querySelector(".modal__form"),this._modalSubmitBtn=this._modalElement.querySelector(".modal__button"),this._modalInputs=this._modalElement.querySelectorAll(".modal__input"),this._handleSubmitForm=t}_getInputValues(){const e={};return this._modalInputs.forEach((t=>{e[t.name]=t.value})),e}setSubmitButtonText(e){this._modalSubmitBtn.textContent=e,this._modalSubmitBtn.textContent=e}setEventListeners(){this._modalSubmitBtn.addEventListener("click",(e=>{e.preventDefault(),this._handleSubmitForm(this._getInputValues())})),super.setEventListeners()}close(){this._modalForm.reset(),super.close()}};const g=new class{constructor(e){let{name:t,about:s,avatar:r}=e;this._user=t,this._about=s,this._avatar=r}getUserInfo(){return{name:this._user.textContent,about:this._about.textContent}}getAvatarInfo(){return this._avatar}setUserInfo(e){let{name:t,about:s}=e;this._user.textContent=t,this._about.textContent=s}setAvatarInfo(e){let{name:t,avatar:s}=e;this._avatar.src=s,this._avatar.alt=t}}({name:E,about:S,avatar:v});let q;const B=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkStatus(e){if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkStatus)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkStatus)}editUserProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.title,about:e.description})}).then(this._checkStatus)}editUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkStatus)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkStatus)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkStatus)}addCardLike(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkStatus)}removeCardLike(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkStatus)}getApiInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"c7546df9-ad4c-4c05-9963-4c89159dd0ba","Content-Type":"application/json"}});let x;const w=new I(r,(e=>{w.setSubmitButtonText("Saving..."),B.editUserProfile(e).then((e=>{g.setUserInfo(e),w.close()})).catch((e=>console.error(e))).finally((()=>{w.setSubmitButtonText("Save")}))})),U=new I(n,(e=>{U.setSubmitButtonText("Creating..."),B.addNewCard(e).then((e=>{V(e),U.close()})).catch((e=>console.error(e))).finally((()=>{U.setSubmitButtonText("Create")}))})),T=new class extends C{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._modalImage=this._modalElement.querySelector(".modal__image"),this._modalCaption=this._modalElement.querySelector(".modal__caption")}open(e,t){this._modalImage.src=t,this._modalImage.alt=e,this._modalCaption.textContent=e,super.open()}}({modalSelector:a}),A=new class extends C{constructor(e){super({modalSelector:e}),this._confirmButton=this._modalElement.querySelector("#delete-btn-submit")}setSubmitAction(e){this._handleSubmit=e}renderLoading(e,t){this._confirmButton.textContent=e?"Deleting...":t}setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(e=>{e.preventDefault(),this._handleSubmit()}))}}(l),$=new I(d,(e=>{$.setSubmitButtonText("Saving..."),B.editUserAvatar(e.avatar).then((e=>{g.setAvatarInfo(e),$.close()})).catch((e=>console.error(e))).finally((()=>{$.setSubmitButtonText("Save")}))}));function V(t){const s=function(t){const s=new e(t,q,"#card-template",((e,t)=>{T.open(e,t)}),(e=>{A.open(),A.setSubmitAction((()=>{A.renderLoading(!0),B.deleteCard(e).then((()=>{s.deleteCard(),A.close()})).catch((e=>console.error(e))).finally((()=>{A.renderLoading(!1,"Yes")}))}))}),(e=>{s.isLiked()?B.removeCardLike(e).then((e=>s.setLikes(e.likes))).catch((e=>console.error(e))):B.addCardLike(e).then((e=>s.setLikes(e.likes))).catch((e=>console.error(e)))}));return s.getCardElement()}(t);x.prependItem(s)}B.getApiInfo().then((e=>{let[t,s]=e;q=t._id,g.setUserInfo(t),g.setAvatarInfo(t),x=new class{constructor(e,t){let{item:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({item:s,renderer:V},".cards__list"),x.renderItems()})).catch((e=>console.error(e))),h.addEventListener("click",(()=>{f.value=E.textContent,y.value=S.textContent,w.open(),D.resetValidation()})),m.addEventListener("click",(()=>{U.open(),P.resetValidation()})),L.addEventListener("click",(()=>{$.open(),F.resetValidation()})),_.addEventListener("click",(()=>w.close())),u.addEventListener("click",(()=>U.close())),p.addEventListener("click",(()=>T.close())),k.addEventListener("click",(()=>A.close())),b.addEventListener("click",(()=>$.close())),w.setEventListeners(),U.setEventListeners(),T.setEventListeners(),A.setEventListeners(),$.setEventListeners();const D=new t(s,i),P=new t(s,o),F=new t(s,c);D.enableValidation(),P.enableValidation(),F.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RCxpQkFBaUIsU0FBUyxLQUx2Q3NFLEVBQVd1QixNQUFROUIsRUFBYXBFLFlBQ2hDNEUsRUFBaUJzQixNQUFRN0IsRUFBbUJyRSxZQU01Q2tKLEVBQWlCbEUsT0FDakJ3RyxFQUFxQmpJLGlCQUFpQixJQUV4Q1csRUFBVzdELGlCQUFpQixTQUFTLEtBQ25Db0osRUFBYXpFLE9BQ2J5RyxFQUFxQmxJLGlCQUFpQixJQUd4Q2tCLEVBQWlCcEUsaUJBQWlCLFNBQVMsS0FDekNpSyxFQUFrQnRGLE9BQ2xCMEcsRUFBb0JuSSxpQkFBaUIsSUFJdkNVLEVBQXlCNUQsaUJBQWlCLFNBQVMsSUFDakQ2SSxFQUFpQmhFLFVBR25CZixFQUFpQjlELGlCQUFpQixTQUFTLElBQU1vSixFQUFhdkUsVUFFOURYLEVBQXFCbEUsaUJBQWlCLFNBQVMsSUFBTXNKLEVBQWF6RSxVQUVsRVYsRUFBbUJuRSxpQkFBaUIsU0FBUyxJQUFNeUosRUFBZ0I1RSxVQUVuRVIsRUFBb0JyRSxpQkFBaUIsU0FBUyxJQUFNaUssRUFBa0JwRixVQUd0RWdFLEVBQWlCMUQsb0JBQ2pCaUUsRUFBYWpFLG9CQUNibUUsRUFBYW5FLG9CQUNic0UsRUFBZ0J0RSxvQkFDaEI4RSxFQUFrQjlFLG9CQUdsQixNQUFNZ0csRUFBdUIsSUFBSXpLLEVBQWNDLEVBQVF5QyxHQUNqRGdJLEVBQXVCLElBQUkxSyxFQUFjQyxFQUFRMkMsR0FDakQrSCxFQUFzQixJQUFJM0ssRUFBY0MsRUFBUStDLEdBRXREeUgsRUFBcUJySSxtQkFDckJzSSxFQUFxQnRJLG1CQUNyQnVJLEVBQW9Cdkksa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy91dGlscy9BcGkuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qICAgICAgICAgICBDYXJkIENsYXNzICAgICAgICAgICAgKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBkYXRhLFxyXG4gICAgdXNlcklkLFxyXG4gICAgY2FyZFNlbGVjdG9yLFxyXG4gICAgaGFuZGxlQ2FyZENsaWNrLFxyXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2ssXHJcbiAgICBoYW5kbGVMaWtlQ2xpY2tcclxuICApIHtcclxuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5faWQgPSBkYXRhLl9pZDtcclxuICAgIHRoaXMuX293bmVySWQgPSBkYXRhLm93bmVyLl9pZDtcclxuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcclxuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgICAgICAgIEhhbmRsZXJzICAgICAgICAgICAgICovXHJcbiAgLy8gX2hhbmRsZUxpa2VCdXR0b24oKSB7XHJcbiAgLy8gICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgLy8gfVxyXG5cclxuICBkZWxldGVDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG5cclxuICBfYWRkTGlrZXMoKSB7XHJcbiAgICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgfVxyXG5cclxuICBfcmVtb3ZlTGlrZXMoKSB7XHJcbiAgICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgfVxyXG5cclxuICBzZXRMaWtlcyhsaWtlcykge1xyXG4gICAgdGhpcy5fbGlrZXMgPSBsaWtlcztcclxuICAgIHRoaXMuX3JlbmRlckxpa2VzKCk7XHJcbiAgfVxyXG5cclxuICBpc0xpa2VkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2xpa2VzLnNvbWUoKGxpa2UpID0+IGxpa2UuX2lkID09PSB0aGlzLl91c2VySWQpO1xyXG4gIH1cclxuXHJcbiAgX3JlbmRlckxpa2VzKCkge1xyXG4gICAgdGhpcy5fY2FyZExpa2UudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcblxyXG4gICAgaWYgKHRoaXMuaXNMaWtlZCgpKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9hZGRMaWtlcygpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3JlbW92ZUxpa2VzKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKiAgICAgICAgICAgICBFdmVudCBMaXN0ZW5lcnMgICAgICAgICAgICAgKi9cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9saWtlQnRuID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX2RlbGV0ZUJ0biA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKTtcclxuXHJcbiAgICB0aGlzLl9saWtlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzLl9pZCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9kZWxldGVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sodGhpcy5faWQpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltZ0VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgIENhcmQgVGVtcGxhdGUgICAgICAgKi9cclxuICBfZ2V0RWxlbWVudCgpIHtcclxuICAgIHJldHVybiBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gIH1cclxuXHJcbiAgLyogICAgICAgICAgICAgQ2FyZCBWaWV3ICAgICAgICAgICAqL1xyXG4gIGdldENhcmRFbGVtZW50KCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSB0aGlzLl9nZXRFbGVtZW50KCk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltZ0VsZW1lbnQgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5fdGl0bGVFbGVtZW50ID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcclxuICAgIHRoaXMuX2NhcmRMaWtlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLW51bWJlclwiKTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fcmVuZGVyTGlrZXMoKTtcclxuXHJcbiAgICBpZiAodGhpcy5fdXNlcklkICE9IHRoaXMuX293bmVySWQpIHtcclxuICAgICAgdGhpcy5fZGVsZXRlQnRuLnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2NhcmRJbWdFbGVtZW50LnNyYyA9IHRoaXMuX2xpbms7XHJcbiAgICB0aGlzLl9jYXJkSW1nRWxlbWVudC5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fdGl0bGVFbGVtZW50LnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiLyogICAgICBGb3JtIFZhbGlkYXRvciBDbGFzcyAgICAgICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2Zvcm1TZWxlY3RvciA9IGNvbmZpZy5mb3JtU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdG5TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnRuQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9mb3JtRUxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgLyogICAgICBDaGVjayBWYWxpZGl0eSAgICAgICovXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dChpbnB1dEVsZW1lbnQpIHtcclxuICAgIHJldHVybiBpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgfVxyXG5cclxuICAvKiBGb3JtIEV2ZW50IExpc3RlbmVycyAqL1xyXG4gIF9zZXRGb3JtRXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gW1xyXG4gICAgICAuLi50aGlzLl9mb3JtRUxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpLFxyXG4gICAgXTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0biA9IHRoaXMuX2Zvcm1FTGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnRuU2VsZWN0b3IpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0RWxlbWVudHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXQpO1xyXG4gICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qICAgICAgIEVuYWJsZS9EaXNhYmxlIEJ1dHRvbnMgICAgICAqL1xyXG4gIF9kaXNhYmxlQnV0dG9uKCkge1xyXG4gICAgdGhpcy5fc3VibWl0QnRuLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdG5DbGFzcyk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdG4uZGlzYWJsZWQgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgX2VuYWJsZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0bi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnRuQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnRuLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgICBUb2dnbGUgQnV0dG9uIFN0YXRlICAgICAgICovXHJcbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAoIXRoaXMuX2lucHV0RWxlbWVudHMuc29tZSh0aGlzLl9oYXNJbnZhbGlkSW5wdXQpKSB7XHJcbiAgICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2VuYWJsZUJ1dHRvbigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyogICAgICBFdmVudCBIYW5kbGVycyAgICAgICAqL1xyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FTGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FTGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgICBFbmFibGUgRm9ybSBWYWxpZGF0aW9uICAgICAgICovXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50cyA9IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2Zvcm1TZWxlY3RvcildO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50cy5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xyXG4gICAgICBmb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5fc2V0Rm9ybUV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qICAgICAgICBSZXNldCBGb3JtIFZhbGlkYXRpb24gICAgICAgICovXHJcbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCIvKiAgICAgIEluaXRpYWwgQ2FyZHMgT2JqZWN0ICAgICAgKi9cclxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvdmFub2lzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxyXG4gIH0sXHJcbl07XHJcblxyXG4vKiAgICAgIENvbmZpZyBPYmplY3QgICAgICAgKi9cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0LWVycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxyXG59O1xyXG5cclxuLyogICAgICBXcmFwcGVycyAgICAgICovXHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEZvcm0gPSBwcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtYWRkLW1vZGFsXCIpO1xyXG5leHBvcnQgY29uc3QgYWRkQ2FyZEZvcm0gPSBhZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRMaXN0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIik7XHJcbmV4cG9ydCBjb25zdCBwcmV2aWV3SW1hZ2VNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW1hZ2UtbW9kYWxcIik7XHJcbmV4cG9ydCBjb25zdCByZW1vdmVDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1tb2RhbFwiKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhck1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIik7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJNb2RhbEZvcm0gPSBhdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1tb2RhbC1mb3JtXCIpO1xyXG5cclxuLyogICAgICBCdXR0b25zIGFuZCBET00gZWxlbWVudHMgICAgICAqL1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXRcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdE1vZGFsQ2xvc2VCdG4gPVxyXG4gIHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGRcIik7XHJcbmV4cG9ydCBjb25zdCBhZGRNb2RhbENsb3NlQnRuID0gYWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZVwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XHJcbmV4cG9ydCBjb25zdCBwcmV2aWV3SW1hZ2VDbG9zZUJ0biA9XHJcbiAgcHJldmlld0ltYWdlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbmV4cG9ydCBjb25zdCBkZWxldGVDYXJkQ2xvc2VCdG4gPVxyXG4gIHJlbW92ZUNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhckVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLnByb2ZpbGVfX2F2YXRhci1lZGl0LWJ0blwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJNb2RhbENsb3NlQnRuID0gYXZhdGFyTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcblxyXG4vKiAgICAgICBGb3JtIElucHV0cyAgICAgICovXHJcbmV4cG9ydCBjb25zdCBtb2RhbFRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0aXRsZS1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IG1vZGFsRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Rlc2NyaXB0aW9uLWlucHV0XCIpO1xyXG5leHBvcnQgY29uc3QgYWRkQ2FyZFRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRpdGxlLWlucHV0XCIpO1xyXG5leHBvcnQgY29uc3QgYWRkQ2FyZERlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN1cmwtaW5wdXRcIik7XHJcblxyXG4vKiAgICAgICAgICBLZXljb2RlcyAgICAgICAgICAgICAqL1xyXG5leHBvcnQgY29uc3QgRVNDX0tFWUNPREUgPSAyNztcclxuIiwiaW1wb3J0IHsgRVNDX0tFWUNPREUgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBtb2RhbFNlbGVjdG9yIH0pIHtcclxuICAgIHRoaXMuX21vZGFsRWxlbWVudCA9IG1vZGFsU2VsZWN0b3I7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fbW9kYWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9fb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9tb2RhbEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX19vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgaWYgKGUud2hpY2ggPT09IEVTQ19LRVlDT0RFKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBfaGFuZGxlT3ZlcmxheUNsb3NlKGUpIHtcclxuICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fb3BlbmVkXCIpKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fbW9kYWxFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuY2xvc2UoKSk7XHJcblxyXG4gICAgdGhpcy5fbW9kYWxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZShlKVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwO1xyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IobW9kYWxTZWxlY3RvciwgaGFuZGxlU3VibWl0Rm9ybSkge1xyXG4gICAgc3VwZXIoeyBtb2RhbFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fbW9kYWxGb3JtID0gdGhpcy5fbW9kYWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9tb2RhbFN1Ym1pdEJ0biA9IHRoaXMuX21vZGFsRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25cIik7XHJcbiAgICB0aGlzLl9tb2RhbElucHV0cyA9IHRoaXMuX21vZGFsRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKTtcclxuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdEZvcm0gPSBoYW5kbGVTdWJtaXRGb3JtO1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuX21vZGFsSW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBpbnB1dFZhbHVlcztcclxuICB9XHJcblxyXG4gIHNldFN1Ym1pdEJ1dHRvblRleHQodXBsb2FkKSB7XHJcbiAgICB0aGlzLl9tb2RhbFN1Ym1pdEJ0bi50ZXh0Q29udGVudCA9IHVwbG9hZDtcclxuICAgIHRoaXMuX21vZGFsU3VibWl0QnRuLnRleHRDb250ZW50ID0gdXBsb2FkO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9tb2RhbFN1Ym1pdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVTdWJtaXRGb3JtKHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9tb2RhbEZvcm0ucmVzZXQoKTtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtO1xyXG4iLCIvKiAgICAgICBJbXBvcnRzICAgICAgICovXHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcblxyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5cclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vdXRpbHMvQXBpLmpzXCI7XHJcbmltcG9ydCB7XHJcbiAgY29uZmlnLFxyXG4gIHByb2ZpbGVFZGl0TW9kYWwsXHJcbiAgcHJvZmlsZUVkaXRGb3JtLFxyXG4gIGFkZENhcmRNb2RhbCxcclxuICBhZGRDYXJkRm9ybSxcclxuICBwcm9maWxlRWRpdEJ0bixcclxuICBwcm9maWxlRWRpdE1vZGFsQ2xvc2VCdG4sXHJcbiAgYWRkQ2FyZEJ0bixcclxuICBhZGRNb2RhbENsb3NlQnRuLFxyXG4gIHByZXZpZXdJbWFnZU1vZGFsLFxyXG4gIHByZXZpZXdJbWFnZUNsb3NlQnRuLFxyXG4gIG1vZGFsVGl0bGUsXHJcbiAgbW9kYWxEZXNjcmlwdGlvbixcclxuICBwcm9maWxlVGl0bGUsXHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uLFxyXG4gIHJlbW92ZUNhcmRNb2RhbCxcclxuICBkZWxldGVDYXJkQ2xvc2VCdG4sXHJcbiAgcHJvZmlsZUF2YXRhcixcclxuICBhdmF0YXJNb2RhbCxcclxuICBhdmF0YXJFZGl0QnV0dG9uLFxyXG4gIGF2YXRhck1vZGFsQ2xvc2VCdG4sXHJcbiAgYXZhdGFyTW9kYWxGb3JtLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbi8qICAgICAgIFVzZXIgSW5mbyAgICAgICAqL1xyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZTogcHJvZmlsZVRpdGxlLFxyXG4gIGFib3V0OiBwcm9maWxlRGVzY3JpcHRpb24sXHJcbiAgYXZhdGFyOiBwcm9maWxlQXZhdGFyLFxyXG59KTtcclxubGV0IHVzZXJJZDtcclxuXHJcbi8qICAgICAgIEFQSXMgICAgICAqL1xyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTJcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcImM3NTQ2ZGY5LWFkNGMtNGMwNS05OTYzLTRjODkxNTlkZDBiYVwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcbmxldCBjYXJkQXBpO1xyXG5cclxuLyogICAgICAgUG9wdXBzICAgICAgKi9cclxuY29uc3QgZWRpdFByb2ZpbGVNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKHByb2ZpbGVFZGl0TW9kYWwsIChpbnB1dCkgPT4ge1xyXG4gIGVkaXRQcm9maWxlTW9kYWwuc2V0U3VibWl0QnV0dG9uVGV4dChcIlNhdmluZy4uLlwiKTtcclxuICBhcGlcclxuICAgIC5lZGl0VXNlclByb2ZpbGUoaW5wdXQpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTtcclxuICAgICAgZWRpdFByb2ZpbGVNb2RhbC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGVkaXRQcm9maWxlTW9kYWwuc2V0U3VibWl0QnV0dG9uVGV4dChcIlNhdmVcIik7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5jb25zdCBjYXJkQWRkTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybShhZGRDYXJkTW9kYWwsIChpbnB1dCkgPT4ge1xyXG4gIGNhcmRBZGRNb2RhbC5zZXRTdWJtaXRCdXR0b25UZXh0KFwiQ3JlYXRpbmcuLi5cIik7XHJcbiAgYXBpXHJcbiAgICAuYWRkTmV3Q2FyZChpbnB1dClcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIHJlbmRlckNhcmQoZGF0YSk7XHJcbiAgICAgIGNhcmRBZGRNb2RhbC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGNhcmRBZGRNb2RhbC5zZXRTdWJtaXRCdXR0b25UZXh0KFwiQ3JlYXRlXCIpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuY29uc3QgcHJldmlld01vZGFsID0gbmV3IFBvcHVwV2l0aEltYWdlKHtcclxuICBtb2RhbFNlbGVjdG9yOiBwcmV2aWV3SW1hZ2VNb2RhbCxcclxufSk7XHJcblxyXG5jb25zdCBkZWxldGVDYXJkTW9kYWwgPSBuZXcgUG9wdXBXaXRoQ29uZmlybShyZW1vdmVDYXJkTW9kYWwpO1xyXG5cclxuY29uc3QgY2hhbmdlQXZhdGFyTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybShhdmF0YXJNb2RhbCwgKGlucHV0KSA9PiB7XHJcbiAgY2hhbmdlQXZhdGFyTW9kYWwuc2V0U3VibWl0QnV0dG9uVGV4dChcIlNhdmluZy4uLlwiKTtcclxuICBhcGlcclxuICAgIC5lZGl0VXNlckF2YXRhcihpbnB1dC5hdmF0YXIpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICB1c2VySW5mby5zZXRBdmF0YXJJbmZvKGRhdGEpO1xyXG4gICAgICBjaGFuZ2VBdmF0YXJNb2RhbC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGNoYW5nZUF2YXRhck1vZGFsLnNldFN1Ym1pdEJ1dHRvblRleHQoXCJTYXZlXCIpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuLyogICAgICAgQ3JlYXRlIENhcmQgICAgICAgKi9cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChvYmplY3QpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICBvYmplY3QsXHJcbiAgICB1c2VySWQsXHJcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgICAobmFtZSwgbGluaykgPT4ge1xyXG4gICAgICBwcmV2aWV3TW9kYWwub3BlbihuYW1lLCBsaW5rKTtcclxuICAgIH0sXHJcbiAgICAoY2FyZElkKSA9PiB7XHJcbiAgICAgIGRlbGV0ZUNhcmRNb2RhbC5vcGVuKCk7XHJcbiAgICAgIGRlbGV0ZUNhcmRNb2RhbC5zZXRTdWJtaXRBY3Rpb24oKCkgPT4ge1xyXG4gICAgICAgIGRlbGV0ZUNhcmRNb2RhbC5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gICAgICAgIGFwaVxyXG4gICAgICAgICAgLmRlbGV0ZUNhcmQoY2FyZElkKVxyXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICBjYXJkLmRlbGV0ZUNhcmQoKTtcclxuICAgICAgICAgICAgZGVsZXRlQ2FyZE1vZGFsLmNsb3NlKCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcclxuICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgZGVsZXRlQ2FyZE1vZGFsLnJlbmRlckxvYWRpbmcoZmFsc2UsIFwiWWVzXCIpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIChjYXJkSWQpID0+IHtcclxuICAgICAgaWYgKGNhcmQuaXNMaWtlZCgpKSB7XHJcbiAgICAgICAgYXBpXHJcbiAgICAgICAgICAucmVtb3ZlQ2FyZExpa2UoY2FyZElkKVxyXG4gICAgICAgICAgLnRoZW4oKGRhdGEpID0+IGNhcmQuc2V0TGlrZXMoZGF0YS5saWtlcykpXHJcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcGlcclxuICAgICAgICAgIC5hZGRDYXJkTGlrZShjYXJkSWQpXHJcbiAgICAgICAgICAudGhlbigoZGF0YSkgPT4gY2FyZC5zZXRMaWtlcyhkYXRhLmxpa2VzKSlcclxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgKTtcclxuICByZXR1cm4gY2FyZC5nZXRDYXJkRWxlbWVudCgpO1xyXG59XHJcblxyXG4vKiAgICAgIFJlbmRlciBDYXJkcyAgICAgICovXHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoZGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKGRhdGEpO1xyXG4gIGNhcmRBcGkucHJlcGVuZEl0ZW0oY2FyZCk7XHJcbn1cclxuXHJcbi8qICAgICAgIEFQSSBpbmZvICAgICAgKi9cclxuYXBpXHJcbiAgLmdldEFwaUluZm8oKVxyXG4gIC50aGVuKChbaW5pdGlhbGl6ZVVzZXIsIGluaXRpYWxpemVDYXJkc10pID0+IHtcclxuICAgIHVzZXJJZCA9IGluaXRpYWxpemVVc2VyLl9pZDtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKGluaXRpYWxpemVVc2VyKTtcclxuICAgIHVzZXJJbmZvLnNldEF2YXRhckluZm8oaW5pdGlhbGl6ZVVzZXIpO1xyXG5cclxuICAgIGNhcmRBcGkgPSBuZXcgU2VjdGlvbihcclxuICAgICAgeyBpdGVtOiBpbml0aWFsaXplQ2FyZHMsIHJlbmRlcmVyOiByZW5kZXJDYXJkIH0sXHJcbiAgICAgIFwiLmNhcmRzX19saXN0XCJcclxuICAgICk7XHJcbiAgICBjYXJkQXBpLnJlbmRlckl0ZW1zKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcclxuXHJcbi8qICAgICAgIEZvcm0gU3VibWl0IEZ1bmN0aW9ucyAgICAgICAqL1xyXG5mdW5jdGlvbiBmaWxsUHJvZmlsZUZvcm0oKSB7XHJcbiAgbW9kYWxUaXRsZS52YWx1ZSA9IHByb2ZpbGVUaXRsZS50ZXh0Q29udGVudDtcclxuICBtb2RhbERlc2NyaXB0aW9uLnZhbHVlID0gcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50O1xyXG59XHJcblxyXG4vKiAgICAgIE9wZW4gTW9kYWwgTGlzdGVuZXJzICAgICAgICovXHJcbnByb2ZpbGVFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgZmlsbFByb2ZpbGVGb3JtKCk7XHJcbiAgZWRpdFByb2ZpbGVNb2RhbC5vcGVuKCk7XHJcbiAgcHJvZmlsZUZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5hZGRDYXJkQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY2FyZEFkZE1vZGFsLm9wZW4oKTtcclxuICBhZGRDYXJkRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG5hdmF0YXJFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY2hhbmdlQXZhdGFyTW9kYWwub3BlbigpO1xyXG4gIGF2YXRhckZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5cclxuLyogICAgICBDbG9zZSBNb2RhbCBMaXN0ZW5lcnMgICAgICAgKi9cclxucHJvZmlsZUVkaXRNb2RhbENsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gIGVkaXRQcm9maWxlTW9kYWwuY2xvc2UoKVxyXG4pO1xyXG5cclxuYWRkTW9kYWxDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gY2FyZEFkZE1vZGFsLmNsb3NlKCkpO1xyXG5cclxucHJldmlld0ltYWdlQ2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHByZXZpZXdNb2RhbC5jbG9zZSgpKTtcclxuXHJcbmRlbGV0ZUNhcmRDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gZGVsZXRlQ2FyZE1vZGFsLmNsb3NlKCkpO1xyXG5cclxuYXZhdGFyTW9kYWxDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gY2hhbmdlQXZhdGFyTW9kYWwuY2xvc2UoKSk7XHJcblxyXG4vKiAgICAgRXZlbnQgTGlzdGVuZXJzICAgICAgKi9cclxuZWRpdFByb2ZpbGVNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5jYXJkQWRkTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucHJldmlld01vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmRlbGV0ZUNhcmRNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5jaGFuZ2VBdmF0YXJNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLyogICAgICBGb3JtIFZhbGlkYXRvcnMgICAgICAgKi9cclxuY29uc3QgcHJvZmlsZUZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIHByb2ZpbGVFZGl0Rm9ybSk7XHJcbmNvbnN0IGFkZENhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBhZGRDYXJkRm9ybSk7XHJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGF2YXRhck1vZGFsRm9ybSk7XHJcblxyXG5wcm9maWxlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmFkZENhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuYXZhdGFyRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiIsImNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGFib3V0LCBhdmF0YXIgfSkge1xyXG4gICAgdGhpcy5fdXNlciA9IG5hbWU7XHJcbiAgICB0aGlzLl9hYm91dCA9IGFib3V0O1xyXG4gICAgdGhpcy5fYXZhdGFyID0gYXZhdGFyO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCB1c2VyRGF0YSA9IHtcclxuICAgICAgbmFtZTogdGhpcy5fdXNlci50ZXh0Q29udGVudCxcclxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LnRleHRDb250ZW50LFxyXG4gICAgfTtcclxuICAgIHJldHVybiB1c2VyRGF0YTtcclxuICB9XHJcblxyXG4gIGdldEF2YXRhckluZm8oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fYXZhdGFyO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICB0aGlzLl91c2VyLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2Fib3V0LnRleHRDb250ZW50ID0gYWJvdXQ7XHJcbiAgfVxyXG5cclxuICBzZXRBdmF0YXJJbmZvKHsgbmFtZSwgYXZhdGFyIH0pIHtcclxuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBhdmF0YXI7XHJcbiAgICB0aGlzLl9hdmF0YXIuYWx0ID0gbmFtZTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVzZXJJbmZvO1xyXG4iLCJjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrU3RhdHVzKHJlcykge1xyXG4gICAgaWYgKHJlcy5vaykge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH1cclxuICAgIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tTdGF0dXMpO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrU3RhdHVzKTtcclxuICB9XHJcblxyXG4gIGVkaXRVc2VyUHJvZmlsZShpbnB1dERhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBpbnB1dERhdGEudGl0bGUsXHJcbiAgICAgICAgYWJvdXQ6IGlucHV0RGF0YS5kZXNjcmlwdGlvbixcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrU3RhdHVzKTtcclxuICB9XHJcblxyXG4gIGVkaXRVc2VyQXZhdGFyKGF2YXRhcikge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXIsXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1N0YXR1cyk7XHJcbiAgfVxyXG5cclxuICBhZGROZXdDYXJkKHsgbmFtZSwgbGluayB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLFxyXG4gICAgICAgIGxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1N0YXR1cyk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1N0YXR1cyk7XHJcbiAgfVxyXG5cclxuICBhZGRDYXJkTGlrZShjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tTdGF0dXMpO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2FyZExpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrU3RhdHVzKTtcclxuICB9XHJcblxyXG4gIGdldEFwaUluZm8oKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0VXNlckluZm8oKSwgdGhpcy5nZXRJbml0aWFsQ2FyZHMoKV0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXBpO1xyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgbW9kYWxTZWxlY3RvciB9KSB7XHJcbiAgICBzdXBlcih7IG1vZGFsU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9tb2RhbEltYWdlID0gdGhpcy5fbW9kYWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5fbW9kYWxDYXB0aW9uID0gdGhpcy5fbW9kYWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XHJcbiAgfVxyXG4gIG9wZW4obmFtZSwgbGluaykge1xyXG4gICAgdGhpcy5fbW9kYWxJbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgdGhpcy5fbW9kYWxJbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fbW9kYWxDYXB0aW9uLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEltYWdlO1xyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmNsYXNzIFBvcHVwV2l0aENvbmZpcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IobW9kYWxTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIoeyBtb2RhbFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fY29uZmlybUJ1dHRvbiA9XHJcbiAgICAgIHRoaXMuX21vZGFsRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1idG4tc3VibWl0XCIpO1xyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0QWN0aW9uKGFjdGlvbikge1xyXG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gYWN0aW9uO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTG9hZGluZyhpc0RlbGV0aW5nLCB0ZXh0KSB7XHJcbiAgICBpZiAoaXNEZWxldGluZykge1xyXG4gICAgICB0aGlzLl9jb25maXJtQnV0dG9uLnRleHRDb250ZW50ID0gXCJEZWxldGluZy4uLlwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fY29uZmlybUJ1dHRvbi50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9jb25maXJtQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhDb25maXJtO1xyXG4iLCJjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW0sIHJlbmRlcmVyIH0sIHNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW07XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgfVxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCh0aGlzLl9yZW5kZXJlcik7XHJcbiAgfVxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcclxuICB9XHJcbiAgcHJlcGVuZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZWN0aW9uO1xyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiZGF0YSIsInVzZXJJZCIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9pZCIsIl9vd25lcklkIiwib3duZXIiLCJfbGlrZXMiLCJsaWtlcyIsIl91c2VySWQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJkZWxldGVDYXJkIiwiX2NhcmRFbGVtZW50IiwicmVtb3ZlIiwiX2FkZExpa2VzIiwiX2xpa2VCdG4iLCJjbGFzc0xpc3QiLCJhZGQiLCJfcmVtb3ZlTGlrZXMiLCJzZXRMaWtlcyIsIl9yZW5kZXJMaWtlcyIsImlzTGlrZWQiLCJzb21lIiwibGlrZSIsIl9jYXJkTGlrZSIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwicXVlcnlTZWxlY3RvciIsIl9kZWxldGVCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiX2NhcmRJbWdFbGVtZW50IiwiX2dldEVsZW1lbnQiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJnZXRDYXJkRWxlbWVudCIsIl90aXRsZUVsZW1lbnQiLCJzcmMiLCJhbHQiLCJGb3JtVmFsaWRhdG9yIiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ0blNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdG5DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FTGVtZW50IiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImlucHV0RWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJfaGFzSW52YWxpZElucHV0IiwiX3NldEZvcm1FdmVudExpc3RlbmVycyIsIl9pbnB1dEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdG4iLCJmb3JFYWNoIiwiaW5wdXQiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsIl9kaXNhYmxlQnV0dG9uIiwiZGlzYWJsZWQiLCJfZW5hYmxlQnV0dG9uIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImVuYWJsZVZhbGlkYXRpb24iLCJfZm9ybUVsZW1lbnRzIiwiZSIsInByZXZlbnREZWZhdWx0IiwicmVzZXRWYWxpZGF0aW9uIiwicHJvZmlsZUVkaXRNb2RhbCIsInByb2ZpbGVFZGl0Rm9ybSIsImFkZENhcmRNb2RhbCIsImFkZENhcmRGb3JtIiwicHJldmlld0ltYWdlTW9kYWwiLCJyZW1vdmVDYXJkTW9kYWwiLCJhdmF0YXJNb2RhbCIsImF2YXRhck1vZGFsRm9ybSIsInByb2ZpbGVFZGl0QnRuIiwicHJvZmlsZUVkaXRNb2RhbENsb3NlQnRuIiwiYWRkQ2FyZEJ0biIsImFkZE1vZGFsQ2xvc2VCdG4iLCJwcm9maWxlVGl0bGUiLCJwcm9maWxlRGVzY3JpcHRpb24iLCJwcm9maWxlQXZhdGFyIiwicHJldmlld0ltYWdlQ2xvc2VCdG4iLCJkZWxldGVDYXJkQ2xvc2VCdG4iLCJhdmF0YXJFZGl0QnV0dG9uIiwiYXZhdGFyTW9kYWxDbG9zZUJ0biIsIm1vZGFsVGl0bGUiLCJtb2RhbERlc2NyaXB0aW9uIiwiX3JlZiIsIm1vZGFsU2VsZWN0b3IiLCJfbW9kYWxFbGVtZW50Iiwib3BlbiIsIl9oYW5kbGVFc2NDbG9zZSIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIndoaWNoIiwiX2hhbmRsZU92ZXJsYXlDbG9zZSIsInRhcmdldCIsImNvbnRhaW5zIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cCIsImhhbmRsZVN1Ym1pdEZvcm0iLCJzdXBlciIsIl9tb2RhbEZvcm0iLCJfbW9kYWxTdWJtaXRCdG4iLCJfbW9kYWxJbnB1dHMiLCJfaGFuZGxlU3VibWl0Rm9ybSIsIl9nZXRJbnB1dFZhbHVlcyIsImlucHV0VmFsdWVzIiwidmFsdWUiLCJzZXRTdWJtaXRCdXR0b25UZXh0IiwidXBsb2FkIiwicmVzZXQiLCJ1c2VySW5mbyIsImFib3V0IiwiYXZhdGFyIiwiX3VzZXIiLCJfYWJvdXQiLCJfYXZhdGFyIiwiZ2V0VXNlckluZm8iLCJnZXRBdmF0YXJJbmZvIiwic2V0VXNlckluZm8iLCJfcmVmMiIsInNldEF2YXRhckluZm8iLCJfcmVmMyIsImFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsIl9jaGVja1N0YXR1cyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJmZXRjaCIsIm1ldGhvZCIsInRoZW4iLCJnZXRJbml0aWFsQ2FyZHMiLCJlZGl0VXNlclByb2ZpbGUiLCJpbnB1dERhdGEiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJlZGl0VXNlckF2YXRhciIsImFkZE5ld0NhcmQiLCJjYXJkSWQiLCJhZGRDYXJkTGlrZSIsInJlbW92ZUNhcmRMaWtlIiwiZ2V0QXBpSW5mbyIsImFsbCIsImF1dGhvcml6YXRpb24iLCJjYXJkQXBpIiwiZWRpdFByb2ZpbGVNb2RhbCIsIlBvcHVwV2l0aEZvcm0iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImZpbmFsbHkiLCJjYXJkQWRkTW9kYWwiLCJyZW5kZXJDYXJkIiwicHJldmlld01vZGFsIiwiX21vZGFsSW1hZ2UiLCJfbW9kYWxDYXB0aW9uIiwiZGVsZXRlQ2FyZE1vZGFsIiwiX2NvbmZpcm1CdXR0b24iLCJzZXRTdWJtaXRBY3Rpb24iLCJhY3Rpb24iLCJfaGFuZGxlU3VibWl0IiwicmVuZGVyTG9hZGluZyIsImlzRGVsZXRpbmciLCJ0ZXh0IiwiY2hhbmdlQXZhdGFyTW9kYWwiLCJjYXJkIiwib2JqZWN0IiwiY3JlYXRlQ2FyZCIsInByZXBlbmRJdGVtIiwiaW5pdGlhbGl6ZVVzZXIiLCJpbml0aWFsaXplQ2FyZHMiLCJzZWxlY3RvciIsIml0ZW0iLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsImFkZEl0ZW0iLCJlbGVtZW50IiwiYXBwZW5kIiwicHJlcGVuZCIsInByb2ZpbGVGb3JtVmFsaWRhdG9yIiwiYWRkQ2FyZEZvcm1WYWxpZGF0b3IiLCJhdmF0YXJGb3JtVmFsaWRhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==