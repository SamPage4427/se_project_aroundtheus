!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error_visible"},t=document.querySelector("#profile-edit-modal"),s=t.querySelector(".modal__form"),n=document.querySelector("#card-add-modal"),r=n.querySelector(".modal__form"),o=(document.querySelector(".cards__list"),document.querySelector("#image-modal")),i=document.querySelector(".profile__edit"),l=t.querySelector(".modal__close"),a=document.querySelector(".profile__add"),c=n.querySelector(".modal__close"),d=document.querySelector(".profile__title"),m=document.querySelector(".profile__description"),_=o.querySelector(".modal__close"),u=document.querySelector("#title-input"),h=document.querySelector("#description-input");document.querySelector("#card-title-input"),document.querySelector("#url-input");var p=class{constructor(e){let{modalSelector:t}=e;this._modalElement=t}open(){this._modalElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{27===e.which&&this.close()};_handleOverlayClose(e){e.target.classList.contains("modal__opened")&&this.close()}setEventListeners(){this._modalElement.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this._modalElement.addEventListener("mousedown",(e=>this._handleOverlayClose(e)))}};class E{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=s}_handleLikeButton(){this._likeBtn.classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._likeBtn=this._cardElement.querySelector(".card__like-button"),this._deleteBtn=this._cardElement.querySelector(".card__delete-button"),this._likeBtn.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteBtn.addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardImgElement.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCardElement(){this._cardElement=this._getElement(),this._cardImgElement=this._cardElement.querySelector(".card__image");const e=this._cardElement.querySelector(".card__title");return this._setEventListeners(),this._cardImgElement.src=this._link,this._cardImgElement.alt=this._name,e.textContent=this._name,this._cardElement}}class S{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitBtnSelector=e.submitButtonSelector,this._inactiveBtnClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formELement=t}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.validity.valid}_setFormEventListeners(){this._inputElements=[...this._formELement.querySelectorAll(this._inputSelector)],this._submitBtn=this._formELement.querySelector(this._submitBtnSelector),this.toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}_disableButton(){this._submitBtn.classList.add(this._inactiveBtnClass),this._submitBtn.disabled=!0}_enableButton(){this._submitBtn.classList.remove(this._inactiveBtnClass),this._submitBtn.disabled=!1}toggleButtonState(){this._inputElements.every(this._hasInvalidInput)?this._enableButton():this._disableButton()}_showInputError(e){const t=this._formELement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formELement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}enableValidation(){this._formElements=[...document.querySelectorAll(this._formSelector)],this._formElements.forEach((e=>{e.addEventListener("submit",(e=>{e.preventDefault()})),this._setFormEventListeners()}))}}var v=class extends p{constructor(e,t){super({modalSelector:e}),this._modalForm=this._modalElement.querySelector(".modal__form"),this._modalInputs=this._modalElement.querySelectorAll(".modal__input"),this._handleSubmitForm=t}_getInputValues(){const e={};return this._modalInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitForm(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._modalForm.reset(),super.close()}};const y=new class{constructor(e,t){let{item:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({item:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=q(e);y.addItem(t)}},".cards__list");y.renderItems();const L=new class{constructor(e){let{name:t,job:s}=e;this._user=document.querySelector(t),this._job=document.querySelector(s)}getUserInfo(){return{name:this._user.textContent,job:this._job.textContent}}setUserInfo(e,t){this._user.textContent=e,this._job.textContent=t}}({name:".profile__title",job:".profile__description"}),g=new v(t,(e=>{L.setUserInfo(e.title,e.description)})),f=new v(n,(e=>{var t;t={name:e.name,link:e.link},y.prependItem(q(t))})),C=new class extends p{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._modalImage=this._modalElement.querySelector(".modal__image"),this._modalCaption=this._modalElement.querySelector(".modal__caption")}open(e,t){this._modalImage.src=t,this._modalImage.alt=e,this._modalCaption.textContent=e,super.open()}}({modalSelector:o});C.setEventListeners(),i.addEventListener("click",(()=>{u.value=d.textContent,h.value=m.textContent,g.open()})),a.addEventListener("click",(()=>{f.open(),b.toggleButtonState()})),l.addEventListener("click",(()=>g.close())),c.addEventListener("click",(()=>f.close())),_.addEventListener("click",(()=>C.close())),g.setEventListeners(),f.setEventListeners();const k=new S(e,s),b=new S(e,r);function q(e){return new E(e,"#card-template",((e,t)=>{C.open(e,t)})).getCardElement()}k.enableValidation(),b.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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U0FBUyxJQUFNeUcsRUFBYXZHLFVBRTlEYixFQUFxQlcsaUJBQWlCLFNBQVMsSUFBTTJHLEVBQWF6RyxVQUdsRW1HLEVBQWlCM0Ysb0JBQ2pCK0YsRUFBYS9GLG9CQUdiLE1BQU1xRyxFQUF1QixJQUFJMUUsRUFBY3BFLEVBQVFVLEdBQ2pEbUksRUFBdUIsSUFBSXpFLEVBQWNwRSxFQUFRWSxHQU12RCxTQUFTaUgsRUFBV2tCLEdBSWxCLE9BSGEsSUFBSXJHLEVBQUtxRyxFQUFRLGtCQUFrQixDQUFDaEcsRUFBTUUsS0FDckR5RixFQUFhOUcsS0FBS21CLEVBQU1FLEVBQUssSUFFbkJjLGdCQUNkLENBVEErRSxFQUFxQjVDLG1CQUNyQjJDLEVBQXFCM0Msa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qICAgICAgSW5pdGlhbCBDYXJkcyBPYmplY3QgICAgICAqL1xyXG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbi8qICAgICAgQ29uZmlnIE9iamVjdCAgICAgICAqL1xyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXQtZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcblxyXG4vKiAgICAgIFdyYXBwZXJzICAgICAgKi9cclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZENhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1hZGQtbW9kYWxcIik7XHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkRm9ybSA9IGFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG5leHBvcnQgY29uc3QgY2FyZExpc3RFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcclxuZXhwb3J0IGNvbnN0IHByZXZpZXdJbWFnZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1tb2RhbFwiKTtcclxuXHJcbi8qICAgICAgQnV0dG9ucyBhbmQgRE9NIGVsZW1lbnRzICAgICAgKi9cclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0XCIpO1xyXG4vLyBjb25zdCBtb2RhbENsb3NlQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdE1vZGFsQ2xvc2VCdG4gPVxyXG4gIHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbmV4cG9ydCBjb25zdCBhZGRDYXJkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGRcIik7XHJcbmV4cG9ydCBjb25zdCBhZGRNb2RhbENsb3NlQnRuID0gYWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZVwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgcHJldmlld0ltYWdlQ2xvc2VCdG4gPVxyXG4gIHByZXZpZXdJbWFnZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xyXG5cclxuLyogICAgICAgRm9ybSBJbnB1dHMgICAgICAqL1xyXG5leHBvcnQgY29uc3QgbW9kYWxUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGl0bGUtaW5wdXRcIik7XHJcbmV4cG9ydCBjb25zdCBtb2RhbERlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZXNjcmlwdGlvbi1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZENhcmRUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10aXRsZS1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZENhcmREZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdXJsLWlucHV0XCIpO1xyXG5cclxuLyogICAgICAgICAgS2V5Y29kZXMgICAgICAgICAgICAgKi9cclxuZXhwb3J0IGNvbnN0IEVTQ19LRVlDT0RFID0gMjc7XHJcbiIsImltcG9ydCB7IEVTQ19LRVlDT0RFIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgbW9kYWxTZWxlY3RvciB9KSB7XHJcbiAgICB0aGlzLl9tb2RhbEVsZW1lbnQgPSBtb2RhbFNlbGVjdG9yO1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX21vZGFsRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fbW9kYWxFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9fb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGUpID0+IHtcclxuICAgIGlmIChlLndoaWNoID09PSBFU0NfS0VZQ09ERSkge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgX2hhbmRsZU92ZXJsYXlDbG9zZShlKSB7XHJcbiAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX29wZW5lZFwiKSkge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX21vZGFsRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLmNsb3NlKCkpO1xyXG4gICAgdGhpcy5fbW9kYWxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+XHJcbiAgICAgIHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZShlKVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwO1xyXG4iLCIvLyBpbXBvcnQge29wZW5Nb2RhbH0gZnJvbSBcIi4uL3V0aWxzL3V0aWxzLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5cclxuLyogICAgICAgICAgIENhcmQgQ2xhc3MgICAgICAgICAgICAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgICAgICAgIFByaXZhdGUgSGFuZGxlcnMgICAgICAgICAgICAgKi9cclxuICBfaGFuZGxlTGlrZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2xpa2VCdG4uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVEZWxldGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gbnVsbDtcclxuICB9XHJcblxyXG4gIC8vIF9oYW5kbGVQcmV2aWV3SW1nKCkge1xyXG4gIC8vICAgdGhpcy5fcHJldmlld0ltZ01vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1tb2RhbFwiKTtcclxuICAvLyAgIHRoaXMuX3ByZXZpZXdJbWcgPSB0aGlzLl9wcmV2aWV3SW1nTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgLy8gICB0aGlzLl9wcmV2aWV3SW1nQ2FwdGlvbiA9XHJcbiAgLy8gICAgIHRoaXMuX3ByZXZpZXdJbWdNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jYXB0aW9uXCIpO1xyXG5cclxuICAvLyAgIG9wZW5Nb2RhbCh0aGlzLl9wcmV2aWV3SW1nTW9kYWwpO1xyXG4gIC8vICAgdGhpcy5fcHJldmlld0ltZy5zcmMgPSB0aGlzLl9saW5rO1xyXG4gIC8vICAgdGhpcy5fcHJldmlld0ltZy5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gIC8vICAgdGhpcy5fcHJldmlld0ltZ0NhcHRpb24udGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gIC8vIH1cclxuXHJcbiAgLyogICAgICAgICAgICAgRXZlbnQgTGlzdGVuZXJzICAgICAgICAgICAgICovXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fbGlrZUJ0biA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl9kZWxldGVCdG4gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIik7XHJcblxyXG4gICAgdGhpcy5fbGlrZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9kZWxldGVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQnV0dG9uKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkSW1nRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qICAgICAgQ2FyZCBUZW1wbGF0ZSAgICAgICAqL1xyXG4gIF9nZXRFbGVtZW50KCkge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgICAgICAgICBDYXJkIFZpZXcgICAgICAgICAgICovXHJcbiAgZ2V0Q2FyZEVsZW1lbnQoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldEVsZW1lbnQoKTtcclxuXHJcbiAgICB0aGlzLl9jYXJkSW1nRWxlbWVudCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltZ0VsZW1lbnQuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWdFbGVtZW50LmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gIH1cclxufVxyXG4iLCIvKiAgICAgIEZvcm0gVmFsaWRhdG9yIENsYXNzICAgICAgKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gY29uZmlnLmZvcm1TZWxlY3RvcjtcclxuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjb25maWcuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0blNlbGVjdG9yID0gY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdG5DbGFzcyA9IGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY29uZmlnLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBjb25maWcuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Zvcm1FTGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgIENoZWNrIFZhbGlkaXR5ICAgICAgKi9cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KGlucHV0RWxlbWVudCkge1xyXG4gICAgcmV0dXJuIGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICB9XHJcblxyXG4gIC8qIEZvcm0gRXZlbnQgTGlzdGVuZXJzICovXHJcbiAgX3NldEZvcm1FdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2lucHV0RWxlbWVudHMgPSBbXHJcbiAgICAgIC4uLnRoaXMuX2Zvcm1FTGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvciksXHJcbiAgICBdO1xyXG4gICAgdGhpcy5fc3VibWl0QnRuID0gdGhpcy5fZm9ybUVMZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdG5TZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyogICAgICAgRW5hYmxlL0Rpc2FibGUgQnV0dG9ucyAgICAgICovXHJcbiAgX2Rpc2FibGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdG4uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ0bkNsYXNzKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0bi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBfZW5hYmxlQnV0dG9uKCkge1xyXG4gICAgdGhpcy5fc3VibWl0QnRuLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdG5DbGFzcyk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdG4uZGlzYWJsZWQgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIC8qICAgICAgIFRvZ2dsZSBCdXR0b24gU3RhdGUgICAgICAgKi9cclxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICghdGhpcy5faW5wdXRFbGVtZW50cy5ldmVyeSh0aGlzLl9oYXNJbnZhbGlkSW5wdXQpKSB7XHJcbiAgICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2VuYWJsZUJ1dHRvbigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyogICAgICBFdmVudCBIYW5kbGVycyAgICAgICAqL1xyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FTGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FTGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICAvKiAgICAgICBFbmFibGUgRm9ybSBWYWxpZGF0aW9uICAgICAgICovXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50cyA9IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2Zvcm1TZWxlY3RvcildO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50cy5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xyXG4gICAgICBmb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5fc2V0Rm9ybUV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtLCByZW5kZXJlciB9LCBzZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xyXG4gIH1cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxuICBwcmVwZW5kSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihtb2RhbFNlbGVjdG9yLCBoYW5kbGVTdWJtaXRGb3JtKSB7XHJcbiAgICBzdXBlcih7IG1vZGFsU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9tb2RhbEZvcm0gPSB0aGlzLl9tb2RhbEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuX21vZGFsSW5wdXRzID0gdGhpcy5fbW9kYWxFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgdGhpcy5faGFuZGxlU3VibWl0Rm9ybSA9IGhhbmRsZVN1Ym1pdEZvcm07XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xyXG4gICAgdGhpcy5fbW9kYWxJbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9tb2RhbEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdEZvcm0odGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fbW9kYWxGb3JtLnJlc2V0KCk7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoRm9ybTtcclxuIiwiLyogICAgICAgSW1wb3J0cyAgICAgICAqL1xyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IHtcclxuICBpbml0aWFsQ2FyZHMsXHJcbiAgY29uZmlnLFxyXG4gIHByb2ZpbGVFZGl0TW9kYWwsXHJcbiAgcHJvZmlsZUVkaXRGb3JtLFxyXG4gIGFkZENhcmRNb2RhbCxcclxuICBhZGRDYXJkRm9ybSxcclxuICBwcm9maWxlRWRpdEJ0bixcclxuICBwcm9maWxlRWRpdE1vZGFsQ2xvc2VCdG4sXHJcbiAgYWRkQ2FyZEJ0bixcclxuICBhZGRNb2RhbENsb3NlQnRuLFxyXG4gIHByZXZpZXdJbWFnZU1vZGFsLFxyXG4gIHByZXZpZXdJbWFnZUNsb3NlQnRuLFxyXG4gIG1vZGFsVGl0bGUsXHJcbiAgbW9kYWxEZXNjcmlwdGlvbixcclxuICBwcm9maWxlVGl0bGUsXHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuXHJcbi8qICAgICAgIENsYXNzIEluc3RhbmNlcyAgICAgICAqL1xyXG5jb25zdCBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIGl0ZW06IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xyXG4gICAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChkYXRhKTtcclxuICAgICAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkKTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBcIi5jYXJkc19fbGlzdFwiXHJcbik7XHJcbmNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XHJcbiAgbmFtZTogXCIucHJvZmlsZV9fdGl0bGVcIixcclxuICBqb2I6IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXHJcbn0pO1xyXG5cclxuY29uc3QgZWRpdFByb2ZpbGVNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKHByb2ZpbGVFZGl0TW9kYWwsIChpbnB1dCkgPT4ge1xyXG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGlucHV0LnRpdGxlLCBpbnB1dC5kZXNjcmlwdGlvbik7XHJcbn0pO1xyXG5cclxuY29uc3QgY2FyZEFkZE1vZGFsID0gbmV3IFBvcHVwV2l0aEZvcm0oYWRkQ2FyZE1vZGFsLCAoaW5wdXQpID0+IHtcclxuICByZW5kZXJDYXJkKHsgbmFtZTogaW5wdXQubmFtZSwgbGluazogaW5wdXQubGluayB9KTtcclxufSk7XHJcblxyXG5jb25zdCBwcmV2aWV3TW9kYWwgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoe1xyXG4gIG1vZGFsU2VsZWN0b3I6IHByZXZpZXdJbWFnZU1vZGFsLFxyXG59KTtcclxuXHJcbnByZXZpZXdNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLyogICAgICBSZW5kZXIgQ2FyZHMgICAgICAqL1xyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGNhcmREYXRhKSB7XHJcbiAgY2FyZFNlY3Rpb24ucHJlcGVuZEl0ZW0oY3JlYXRlQ2FyZChjYXJkRGF0YSkpO1xyXG59XHJcblxyXG4vKiAgICAgICBGb3JtIFN1Ym1pdCBGdW5jdGlvbnMgICAgICAgKi9cclxuZnVuY3Rpb24gZmlsbFByb2ZpbGVGb3JtKCkge1xyXG4gIG1vZGFsVGl0bGUudmFsdWUgPSBwcm9maWxlVGl0bGUudGV4dENvbnRlbnQ7XHJcbiAgbW9kYWxEZXNjcmlwdGlvbi52YWx1ZSA9IHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudDtcclxufVxyXG5cclxuLyogICAgICBPcGVuIE1vZGFsIExpc3RlbmVycyAgICAgICAqL1xyXG5wcm9maWxlRWRpdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGZpbGxQcm9maWxlRm9ybSgpO1xyXG4gIGVkaXRQcm9maWxlTW9kYWwub3BlbigpO1xyXG59KTtcclxuYWRkQ2FyZEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNhcmRBZGRNb2RhbC5vcGVuKCk7XHJcbiAgYWRkQ2FyZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxufSk7XHJcblxyXG4vKiAgICAgIGNsb3NlIE1vZGFsIExpc3RlbmVycyAgICAgICAqL1xyXG5wcm9maWxlRWRpdE1vZGFsQ2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XHJcbiAgZWRpdFByb2ZpbGVNb2RhbC5jbG9zZSgpXHJcbik7XHJcblxyXG5hZGRNb2RhbENsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjYXJkQWRkTW9kYWwuY2xvc2UoKSk7XHJcblxyXG5wcmV2aWV3SW1hZ2VDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gcHJldmlld01vZGFsLmNsb3NlKCkpO1xyXG5cclxuLyogICAgICBGb3JtIEV2ZW50IExpc3RlbmVycyAgICAgICovXHJcbmVkaXRQcm9maWxlTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuY2FyZEFkZE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vKiAgICAgIEZvcm0gVmFsaWRhdG9ycyAgICAgICAqL1xyXG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgcHJvZmlsZUVkaXRGb3JtKTtcclxuY29uc3QgYWRkQ2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGFkZENhcmRGb3JtKTtcclxuXHJcbnByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuYWRkQ2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuLyogICAgICAgQ3JlYXRlIENhcmQgICAgICAgKi9cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChvYmplY3QpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQob2JqZWN0LCBcIiNjYXJkLXRlbXBsYXRlXCIsIChuYW1lLCBsaW5rKSA9PiB7XHJcbiAgICBwcmV2aWV3TW9kYWwub3BlbihuYW1lLCBsaW5rKTtcclxuICB9KTtcclxuICByZXR1cm4gY2FyZC5nZXRDYXJkRWxlbWVudCgpO1xyXG59XHJcbiIsImNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGpvYiB9KSB7XHJcbiAgICB0aGlzLl91c2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lKTtcclxuICAgIHRoaXMuX2pvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgY29uc3QgdXNlckRhdGEgPSB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX3VzZXIudGV4dENvbnRlbnQsXHJcbiAgICAgIGpvYjogdGhpcy5fam9iLnRleHRDb250ZW50LFxyXG4gICAgfTtcclxuICAgIHJldHVybiB1c2VyRGF0YTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKG5hbWUsIGpvYikge1xyXG4gICAgdGhpcy5fdXNlci50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9qb2IudGV4dENvbnRlbnQgPSBqb2I7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbztcclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IG1vZGFsU2VsZWN0b3IgfSkge1xyXG4gICAgc3VwZXIoeyBtb2RhbFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fbW9kYWxJbWFnZSA9IHRoaXMuX21vZGFsRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX21vZGFsQ2FwdGlvbiA9IHRoaXMuX21vZGFsRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jYXB0aW9uXCIpO1xyXG4gIH1cclxuICBvcGVuKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX21vZGFsSW1hZ2Uuc3JjID0gbGluaztcclxuICAgIHRoaXMuX21vZGFsSW1hZ2UuYWx0ID0gbmFtZTtcclxuICAgIHRoaXMuX21vZGFsQ2FwdGlvbi50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhJbWFnZTtcclxuIl0sIm5hbWVzIjpbImNvbmZpZyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwicHJvZmlsZUVkaXRNb2RhbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInByb2ZpbGVFZGl0Rm9ybSIsImFkZENhcmRNb2RhbCIsImFkZENhcmRGb3JtIiwicHJldmlld0ltYWdlTW9kYWwiLCJwcm9maWxlRWRpdEJ0biIsInByb2ZpbGVFZGl0TW9kYWxDbG9zZUJ0biIsImFkZENhcmRCdG4iLCJhZGRNb2RhbENsb3NlQnRuIiwicHJvZmlsZVRpdGxlIiwicHJvZmlsZURlc2NyaXB0aW9uIiwicHJldmlld0ltYWdlQ2xvc2VCdG4iLCJtb2RhbFRpdGxlIiwibW9kYWxEZXNjcmlwdGlvbiIsImNvbnN0cnVjdG9yIiwiX3JlZiIsIm1vZGFsU2VsZWN0b3IiLCJ0aGlzIiwiX21vZGFsRWxlbWVudCIsIm9wZW4iLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUVzY0Nsb3NlIiwiY2xvc2UiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZSIsIndoaWNoIiwiX2hhbmRsZU92ZXJsYXlDbG9zZSIsInRhcmdldCIsImNvbnRhaW5zIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJDYXJkIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZUxpa2VCdXR0b24iLCJfbGlrZUJ0biIsInRvZ2dsZSIsIl9oYW5kbGVEZWxldGVCdXR0b24iLCJfY2FyZEVsZW1lbnQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfZGVsZXRlQnRuIiwiX2NhcmRJbWdFbGVtZW50IiwiX2dldEVsZW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiZ2V0Q2FyZEVsZW1lbnQiLCJ0aXRsZUVsZW1lbnQiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsIl9mb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdG5TZWxlY3RvciIsIl9pbmFjdGl2ZUJ0bkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiX2Zvcm1FTGVtZW50IiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImlucHV0RWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJfaGFzSW52YWxpZElucHV0IiwiX3NldEZvcm1FdmVudExpc3RlbmVycyIsIl9pbnB1dEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdG4iLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJpbnB1dCIsIl9kaXNhYmxlQnV0dG9uIiwiZGlzYWJsZWQiLCJfZW5hYmxlQnV0dG9uIiwiZXZlcnkiLCJlcnJvckVsZW1lbnQiLCJpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiZW5hYmxlVmFsaWRhdGlvbiIsIl9mb3JtRWxlbWVudHMiLCJwcmV2ZW50RGVmYXVsdCIsIlBvcHVwIiwiaGFuZGxlU3VibWl0Rm9ybSIsInN1cGVyIiwiX21vZGFsRm9ybSIsIl9tb2RhbElucHV0cyIsIl9oYW5kbGVTdWJtaXRGb3JtIiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJ2YWx1ZSIsInJlc2V0IiwiY2FyZFNlY3Rpb24iLCJzZWxlY3RvciIsIml0ZW0iLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsImFkZEl0ZW0iLCJlbGVtZW50IiwiYXBwZW5kIiwicHJlcGVuZEl0ZW0iLCJwcmVwZW5kIiwiY2FyZCIsImNyZWF0ZUNhcmQiLCJ1c2VySW5mbyIsImpvYiIsIl91c2VyIiwiX2pvYiIsImdldFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJlZGl0UHJvZmlsZU1vZGFsIiwiUG9wdXBXaXRoRm9ybSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJjYXJkQWRkTW9kYWwiLCJjYXJkRGF0YSIsInByZXZpZXdNb2RhbCIsIl9tb2RhbEltYWdlIiwiX21vZGFsQ2FwdGlvbiIsImFkZENhcmRGb3JtVmFsaWRhdG9yIiwicHJvZmlsZUZvcm1WYWxpZGF0b3IiLCJvYmplY3QiXSwic291cmNlUm9vdCI6IiJ9